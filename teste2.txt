	 (1, 1): scale - "scale"
	 (1, 7): = - "="
	 (1, 9): 20 - <NUMBERS>
	 (1, 12): 
 - "\n"
	 (2, 2): 
 - "\n"
	 (6, 4): 
 - "\n"
	 (7, 2): 
 - "\n"
	 (8, 1): define - "define"
	 (8, 8): each - <ID>
	 (8, 12): ( - "("
	 (8, 13): x - <ID>
	 (8, 14): ) - ")"
	 (8, 16): { - "{"
	 (8, 18): 
 - "\n"
	 (9, 3): auto - "auto"
	 (9, 9): ab - <ID>
	 (9, 11): , - ","
	 (9, 13): d - <ID>
	 (9, 14): , - ","
	 (9, 16): eb - <ID>
	 (9, 18): , - ","
	 (9, 20): f - <ID>
	 (9, 21): , - ","
	 (9, 23): i - <ID>
	 (9, 24): , - ","
	 (9, 26): m - <ID>
	 (9, 27): , - ","
	 (9, 29): v - <ID>
	 (9, 30): , - ","
	 (9, 32): z - <ID>
	 (9, 34): 
 - "\n"
	 (10, 2): 
 - "\n"
	 (11, 30): 
 - "\n"
	 (12, 3): if - "if"
	 (12, 6): ( - "("
	 (12, 7): x - <ID>
	 (12, 8): < - "<"
	 (12, 9): 0 - <NUMBERS>
	 (12, 10): ) - ")"
	 (12, 12): { - "{"
	 (12, 14): 
 - "\n"
	 (13, 5): m - <ID>
	 (13, 7): = - "="
	 (13, 9): 1 - <NUMBERS>
	 (13, 11): 
 - "\n"
	 (14, 5): x - <ID>
	 (14, 7): = - "="
	 (14, 9): - - "-"
	 (14, 10): x - <ID>
	 (14, 12): 
 - "\n"
	 (15, 3): } - "}"
	 (15, 5): 
 - "\n"
	 (16, 2): 
 - "\n"
	 (17, 25): 
 - "\n"
	 (18, 3): z - <ID>
	 (18, 5): = - "="
	 (18, 7): scale - "scale"
	 (18, 12): ; - ";"
	 (18, 14): 
 - "\n"
	 (19, 3): scale - "scale"
	 (19, 9): = - "="
	 (19, 11): 4 - <NUMBERS>
	 (19, 13): + - "+"
	 (19, 15): z - <ID>
	 (19, 17): + - "+"
	 (19, 19): .44 - <NUMBERS>
	 (19, 22): * - "*"
	 (19, 23): x - <ID>
	 (19, 24): ; - ";"
	 (19, 26): 
 - "\n"
	 (20, 3): while - "while"
	 (20, 9): ( - "("
	 (20, 10): x - <ID>
	 (20, 12): > - ">"
	 (20, 14): 1 - <NUMBERS>
	 (20, 15): ) - ")"
	 (20, 17): { - "{"
	 (20, 19): 
 - "\n"
	 (21, 5): f - <ID>
	 (21, 7): += - "+="
	 (21, 10): 1 - <NUMBERS>
	 (21, 11): ; - ";"
	 (21, 13): 
 - "\n"
	 (22, 5): x - <ID>
	 (22, 7): /= - "/="
	 (22, 10): 2 - <NUMBERS>
	 (22, 11): ; - ";"
	 (22, 13): 
 - "\n"
	 (23, 3): } - "}"
	 (23, 5): 
 - "\n"
	 (24, 2): 
 - "\n"
	 (25, 35): 
 - "\n"
	 (26, 3): v - <ID>
	 (26, 5): = - "="
	 (26, 7): 1 - <NUMBERS>
	 (26, 8): + - "+"
	 (26, 9): x - <ID>
	 (26, 11): 
 - "\n"
	 (27, 3): ab - <ID>
	 (27, 6): = - "="
	 (27, 8): x - <ID>
	 (27, 10): 
 - "\n"
	 (28, 3): d - <ID>
	 (28, 5): = - "="
	 (28, 7): 1 - <NUMBERS>
	 (28, 9): 
 - "\n"
	 (29, 2): 
 - "\n"
	 (30, 3): for - "for"
	 (30, 7): ( - "("
	 (30, 8): i - <ID>
	 (30, 9): = - "="
	 (30, 10): 2 - <NUMBERS>
	 (30, 11): ; - ";"
	 (30, 13): 1 - <NUMBERS>
	 (30, 14): ; - ";"
	 (30, 16): i - <ID>
	 (30, 17): ++ - "++"
	 (30, 19): ) - ")"
	 (30, 21): { - "{"
	 (30, 23): 
 - "\n"
	 (31, 5): eb - <ID>
	 (31, 8): = - "="
	 (31, 10): ( - "("
	 (31, 11): ab - <ID>
	 (31, 14): *= - "*="
	 (31, 17): x - <ID>
	 (31, 18): ) - ")"
	 (31, 20): / - "/"
	 (31, 22): ( - "("
	 (31, 23): d - <ID>
	 (31, 25): *= - "*="
	 (31, 28): i - <ID>
	 (31, 29): ) - ")"
	 (31, 31): 
 - "\n"
	 (32, 5): if - "if"
	 (32, 8): ( - "("
	 (32, 9): eb - <ID>
	 (32, 12): == - "=="
	 (32, 15): 0 - <NUMBERS>
	 (32, 16): ) - ")"
	 (32, 18): { - "{"
	 (32, 20): 
 - "\n"
	 (33, 7): if - "if"
	 (33, 10): ( - "("
	 (33, 11): f - <ID>
	 (33, 12): > - ">"
	 (33, 13): 0 - <NUMBERS>
	 (33, 14): ) - ")"
	 (33, 16): while - "while"
	 (33, 22): ( - "("
	 (33, 23): f - <ID>
	 (33, 24): -- - "--"
	 (33, 26): ) - ")"
	 (33, 29): v - <ID>
	 (33, 31): = - "="
	 (33, 33): v - <ID>
	 (33, 34): * - "*"
	 (33, 35): v - <ID>
	 (33, 36): ; - ";"
	 (33, 38): 
 - "\n"
	 (34, 7): scale - "scale"
	 (34, 13): = - "="
	 (34, 15): z - <ID>
	 (34, 17): 
 - "\n"
	 (35, 7): if - "if"
	 (35, 10): ( - "("
	 (35, 11): m - <ID>
	 (35, 12): ) - ")"
	 (35, 14): return - "return"
	 (35, 21): ( - "("
	 (35, 22): 1 - <NUMBERS>
	 (35, 23): / - "/"
	 (35, 24): v - <ID>
	 (35, 25): ) - ")"
	 (35, 26): ; - ";"
	 (35, 28): 
 - "\n"
	 (36, 7): return - "return"
	 (36, 14): ( - "("
	 (36, 15): v - <ID>
	 (36, 16): / - "/"
	 (36, 17): 1 - <NUMBERS>
	 (36, 18): ) - ")"
	 (36, 19): ; - ";"
	 (36, 21): 
 - "\n"
	 (37, 5): } - "}"
	 (37, 7): 
 - "\n"
	 (38, 5): v - <ID>
	 (38, 7): += - "+="
	 (38, 10): eb - <ID>
	 (38, 13): 
 - "\n"
	 (39, 3): } - "}"
	 (39, 5): 
 - "\n"
	 (40, 1): } - "}"
	 (40, 3): 
 - "\n"
Programa analisado com sucesso
